// –ö–æ–¥ –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–∞ –±–∞–≥–æ–≤ –ø—Ä—è–º–æ –≤ –≥–∏—Ç—Ö–∞–±, —á—É–¥–µ—Å–∞?

/client/proc/add_bug_down()
	set name = "–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç–∏—Ç—å"
	set category = "–û—Å–æ–±–µ–Ω–Ω–æ–µ"

	if(!check_rights(R_PERMISSIONS))
		return

	var/keybug = input("retard", "delet") as text|null

	if(!keybug)
		return

	GLOB.bug_downs += ckey(keybug)

	var/json_file = file("data/bug_downs.json")
	var/list/file_data = GLOB.bug_downs

	message_admins("[key_name_admin(usr)] –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–µ–ø—Ä–∏–≥–æ–¥–Ω—ã—Ö [keybug].")

	fdel(json_file)
	WRITE_FILE(json_file, json_encode(file_data))

/proc/load_bug_downs()
	var/json_file = file("data/bug_downs.json")
	if(!fexists(json_file))
		return list()
	return list(json_decode(file2text(json_file)))

/client/verb/report_a_bug()
	set name = "Report a bug"
	set category = "–û—Å–æ–±–µ–Ω–Ω–æ–µ"

	if(ckey in GLOB.bug_downs)
		to_chat(src, span_notice("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"))
		return

	var/message = stripped_multiline_input(usr, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É. (–º–∏–Ω–∏–º—É–º 140 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤–∞—à —Å–∏–∫–µ–π –∏ ID —Ä–∞—É–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)", "–û–±–Ω–∞—Ä—É–∂–µ–Ω –±–∞–≥?", "## –û–ø–∏—Å–∞–Ω–∏–µ:\n\n## –ö–∞–∫ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å?")

	if(!message || length_char(message) < 140)
		to_chat(src, span_warning("–ú–∏–Ω–∏–º—É–º 140 —Å–∏–º–≤–æ–ª–æ–≤!"))
		return

	var/message_header = input("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫. (–º–∏–Ω–∏–º—É–º 16 —Å–∏–º–≤–æ–ª–æ–≤)", "–û–±–Ω–∞—Ä—É–∂–µ–Ω –±–∞–≥!") as text|null

	if(!message_header || length_char(message_header) < 16)
		to_chat(src, span_warning("–ú–∏–Ω–∏–º—É–º 16 —Å–∏–º–≤–æ–ª–æ–≤!"))
		return

	var/list/what_we_should_say = list("title" = "\[BUG\] [message_header]", "body" = "[message]\nKey: [key]\nLoc: [AREACOORD(usr)]\n## ID –†–∞—É–Ω–¥–∞: [GLOB.round_id]", "labels" = list("üêõ –±–∞–≥"))

	var/datum/http_request/request = new()
	request.prepare(RUSTG_HTTP_METHOD_POST, "https://api.github.com/repos/frosty-dev/white/issues", json_encode(what_we_should_say), list("accept" = "application/vnd.github.v3+json", "Authorization" = "token [CONFIG_GET(string/github_auth_key)]"), null)
	request.begin_async()
	UNTIL(request.is_complete() || !src)
	if (!src)
		return

	SSblackbox.record_feedback("amount", "bugs_send", 1) //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!

	to_chat(src, span_notice("–£—Å–ø–µ—Ö!"))
	message_admins("[key_name_admin(usr)] –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –≥–∏—Ç—Ö–∞–± —Å–æ–æ–±—â–µ–Ω–∏–µ [what_we_should_say].")

	remove_verb(usr, /client/verb/report_a_bug)
